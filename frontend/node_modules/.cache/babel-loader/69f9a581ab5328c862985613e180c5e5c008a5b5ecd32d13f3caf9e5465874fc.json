{"ast":null,"code":"var _jsxFileName = \"/Users/captainani/Desktop/meshfs-p2p-file-system /frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [peerStatus, setPeerStatus] = useState('Not Started');\n  const [peerList, setPeerList] = useState([]);\n  useEffect(() => {\n    // Listen for messages from the main process\n    window.electronAPI.receive('from-python', data => {\n      console.log('Received from Python:', data);\n      if (data.type === 'PEER_STARTED') {\n        setPeerStatus(`Running on port ${data.payload.port}`);\n      }\n      if (data.type === 'PEER_LIST') {\n        console.log('Raw peer data:', data.payload.peers);\n        console.log('Peer data type:', typeof data.payload.peers);\n        console.log('Is array?', Array.isArray(data.payload.peers));\n        console.log('Length:', data.payload.peers.length);\n\n        // Additional debugging for each peer\n        if (Array.isArray(data.payload.peers)) {\n          data.payload.peers.forEach((peer, index) => {\n            console.log(`Peer ${index}:`, peer, 'Type:', typeof peer);\n          });\n        }\n        setPeerList(data.payload.peers);\n        console.log('State updated. New peerList should be:', data.payload.peers);\n      }\n      if (data.type === 'ERROR') {\n        setPeerStatus(`Error: ${data.payload.message}`);\n        console.error('Error from backend:', data.payload.message);\n      }\n    });\n  }, []);\n\n  // Add debug logging for state changes\n  useEffect(() => {\n    console.log('PeerList state changed:', peerList);\n  }, [peerList]);\n  const startPeer = () => {\n    setPeerStatus('Starting...');\n    window.electronAPI.send('to-python', {\n      type: 'START_PEER',\n      payload: {\n        port: 65435\n      }\n    });\n  };\n  const getPeers = () => {\n    console.log('Getting peers...');\n    window.electronAPI.send('to-python', {\n      type: 'GET_PEERS'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MeshFS Control Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startPeer,\n        children: \"Start Peer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 12\n        }, this), \" \", peerStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getPeers,\n        children: \"Discover Peers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Connected Peers:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '12px',\n          color: '#666'\n        },\n        children: [\"Debug: peerList length = \", peerList.length, \", type = \", typeof peerList, \", isArray = \", Array.isArray(peerList).toString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), peerList.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: peerList.map((peer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: Array.isArray(peer) ? `${peer[0]}:${peer[1]}` : JSON.stringify(peer)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No other peers found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        padding: '10px',\n        backgroundColor: '#f5f5f5',\n        fontSize: '12px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Raw peerList data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(peerList, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TraivHNyI52FmKamcQKrfUQ4wMA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","peerStatus","setPeerStatus","peerList","setPeerList","window","electronAPI","receive","data","console","log","type","payload","port","peers","Array","isArray","length","forEach","peer","index","message","error","startPeer","send","getPeers","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fontSize","color","toString","map","JSON","stringify","marginTop","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/captainani/Desktop/meshfs-p2p-file-system /frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [peerStatus, setPeerStatus] = useState('Not Started');\n  const [peerList, setPeerList] = useState([]);\n\n  useEffect(() => {\n    // Listen for messages from the main process\n    window.electronAPI.receive('from-python', (data) => {\n      console.log('Received from Python:', data);\n      \n      if (data.type === 'PEER_STARTED') {\n        setPeerStatus(`Running on port ${data.payload.port}`);\n      }\n      \n      if (data.type === 'PEER_LIST') {\n        console.log('Raw peer data:', data.payload.peers);\n        console.log('Peer data type:', typeof data.payload.peers);\n        console.log('Is array?', Array.isArray(data.payload.peers));\n        console.log('Length:', data.payload.peers.length);\n        \n        // Additional debugging for each peer\n        if (Array.isArray(data.payload.peers)) {\n          data.payload.peers.forEach((peer, index) => {\n            console.log(`Peer ${index}:`, peer, 'Type:', typeof peer);\n          });\n        }\n        \n        setPeerList(data.payload.peers);\n        console.log('State updated. New peerList should be:', data.payload.peers);\n      }\n      \n      if (data.type === 'ERROR') {\n        setPeerStatus(`Error: ${data.payload.message}`);\n        console.error('Error from backend:', data.payload.message);\n      }\n    });\n  }, []);\n\n  // Add debug logging for state changes\n  useEffect(() => {\n    console.log('PeerList state changed:', peerList);\n  }, [peerList]);\n\n  const startPeer = () => {\n    setPeerStatus('Starting...');\n    window.electronAPI.send('to-python', {\n      type: 'START_PEER',\n      payload: { port: 65435 }\n    });\n  };\n\n  const getPeers = () => {\n    console.log('Getting peers...');\n    window.electronAPI.send('to-python', {\n      type: 'GET_PEERS'\n    });\n  };\n\n  return (\n    <div style={{ padding: '20px', fontFamily: 'sans-serif' }}>\n      <h1>MeshFS Control Panel</h1>\n      <div>\n        <button onClick={startPeer}>Start Peer</button>\n        <p><strong>Status:</strong> {peerStatus}</p>\n      </div>\n      <hr />\n      <div>\n        <button onClick={getPeers}>Discover Peers</button>\n        <h3>Connected Peers:</h3>\n        \n        {/* Debug info */}\n        <p style={{ fontSize: '12px', color: '#666' }}>\n          Debug: peerList length = {peerList.length}, \n          type = {typeof peerList}, \n          isArray = {Array.isArray(peerList).toString()}\n        </p>\n        \n        {peerList.length > 0 ? (\n          <ul>\n            {peerList.map((peer, index) => (\n              <li key={index}>\n                {Array.isArray(peer) ? `${peer[0]}:${peer[1]}` : JSON.stringify(peer)}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No other peers found.</p>\n        )}\n      </div>\n      \n      {/* Raw data display for debugging */}\n      <div style={{ marginTop: '20px', padding: '10px', backgroundColor: '#f5f5f5', fontSize: '12px' }}>\n        <strong>Raw peerList data:</strong>\n        <pre>{JSON.stringify(peerList, null, 2)}</pre>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}