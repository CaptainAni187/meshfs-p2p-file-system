{"ast":null,"code":"var _jsxFileName = \"/Users/captainani/Desktop/meshfs-p2p-file-system /frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [peerStatus, setPeerStatus] = useState('Not Started');\n  const [peerList, setPeerList] = useState([]);\n  useEffect(() => {\n    // Listen for messages from the main process\n    window.electronAPI.receive('from-python', data => {\n      console.log('Received from Python:', data);\n      if (data.type === 'PEER_STARTED') {\n        setPeerStatus(`Running on port ${data.payload.port}`);\n      }\n      if (data.type === 'PEER_LIST') {\n        setPeerList(data.payload.peers);\n      }\n      if (data.type === 'ERROR') {\n        setPeerStatus(`Error: ${data.payload.message}`);\n      }\n    });\n  }, []);\n  const startPeer = () => {\n    setPeerStatus('Starting...');\n    window.electronAPI.send('to-python', {\n      type: 'START_PEER',\n      payload: {\n        port: 65435\n      } // Use a unique port for the UI peer\n    });\n  };\n  const getPeers = () => {\n    window.electronAPI.send('to-python', {\n      type: 'GET_PEERS'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MeshFS Control Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startPeer,\n        children: \"Start Peer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 12\n        }, this), \" \", peerStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getPeers,\n        children: \"Discover Peers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Connected Peers:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), peerList.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: peerList.map((peer, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: `${peer[0]}:${peer[1]}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No other peers found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"35ht8Hceex95djqvVe3BHbxvjYQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","peerStatus","setPeerStatus","peerList","setPeerList","window","electronAPI","receive","data","console","log","type","payload","port","peers","message","startPeer","send","getPeers","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","peer","index","_c","$RefreshReg$"],"sources":["/Users/captainani/Desktop/meshfs-p2p-file-system /frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [peerStatus, setPeerStatus] = useState('Not Started');\n  const [peerList, setPeerList] = useState([]);\n\n  useEffect(() => {\n    // Listen for messages from the main process\n    window.electronAPI.receive('from-python', (data) => {\n      console.log('Received from Python:', data);\n      if (data.type === 'PEER_STARTED') {\n        setPeerStatus(`Running on port ${data.payload.port}`);\n      }\n      if (data.type === 'PEER_LIST') {\n        setPeerList(data.payload.peers);\n      }\n      if (data.type === 'ERROR') {\n        setPeerStatus(`Error: ${data.payload.message}`);\n      }\n    });\n  }, []);\n\n  const startPeer = () => {\n    setPeerStatus('Starting...');\n    window.electronAPI.send('to-python', {\n      type: 'START_PEER',\n      payload: { port: 65435 } // Use a unique port for the UI peer\n    });\n  };\n\n  const getPeers = () => {\n    window.electronAPI.send('to-python', {\n      type: 'GET_PEERS'\n    });\n  };\n\n  return (\n    <div style={{ padding: '20px', fontFamily: 'sans-serif' }}>\n      <h1>MeshFS Control Panel</h1>\n      <div>\n        <button onClick={startPeer}>Start Peer</button>\n        <p><strong>Status:</strong> {peerStatus}</p>\n      </div>\n      <hr />\n      <div>\n        <button onClick={getPeers}>Discover Peers</button>\n        <h3>Connected Peers:</h3>\n        {peerList.length > 0 ? (\n          <ul>\n            {peerList.map((peer, index) => (\n              <li key={index}>{`${peer[0]}:${peer[1]}`}</li>\n            ))}\n          </ul>\n        ) : (\n          <p>No other peers found.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}